datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

enum ApplicationType {
  sample
  startup
  module
}

enum MediaType {
  video
  picture
}

enum Pronoun {
  they
  he
  she
}

model RW_DataMigration {
  version    String   @id
  name       String
  startedAt  DateTime
  finishedAt DateTime
}


model User {
  id                  Int @id @default(autoincrement())
  email               String  @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
}

model Tag {
  // Meta.
  id        Int @id @default(autoincrement())
  // Data.
  label     String
  showcases Showcase[]
}

model Media {
  // Meta.
  id    Int @id @default(autoincrement())
  // Data.
  url   String
  type  MediaType
  // Relations.
  author    Author?
  showcase  Showcase?
}

model Showcase {
  // Meta.
  id            Int @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime?
  isPublished   Boolean @default(false)
  isHighlight   Boolean @default(false)
  // Data.
  type          ApplicationType
  link          String
  label         String?
  title         String?
  subtitle      String?
  source        String?
  description   String
  media         Media? @relation(fields: [mediaId], references: [id])
  mediaId       Int?
  productHunt   String?
  // Relations.
  tags          Tag[]
}

model Author {
  // Meta.
  id            Int @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime?
  // Data.
  firstname     String
  lastname      String
  email         String?
  isEmailPublic Boolean @default(false)
  pronoun       Pronoun @default(they)
  linkedin      String?
  github        String?
  productHunt   String?
  company       String?
  discord       String?
  // Relations.
  avatar        Media? @relation(fields: [avatarId], references: [id])
  avatarId      Int?
}
